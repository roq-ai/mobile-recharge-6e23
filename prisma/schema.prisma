generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model bill_payment {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id        String   @db.Uuid
  provider_id    String   @db.Uuid
  amount         Int
  payment_date   DateTime @default(now()) @db.Timestamp(6)
  payment_status String   @db.VarChar(255)
  bill_type      String   @db.VarChar(255)
  transaction_id String   @db.VarChar(255)
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)
  provider       provider @relation(fields: [provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user           user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model cashback {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id        String   @db.Uuid
  amount         Int
  cashback_date  DateTime @default(now()) @db.Timestamp(6)
  status         String   @db.VarChar(255)
  source         String   @db.VarChar(255)
  transaction_id String   @db.VarChar(255)
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)
  user           user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model customer_service {
  id                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id           String   @db.Uuid
  issue_type        String   @db.VarChar(255)
  issue_description String   @db.VarChar(255)
  issue_status      String   @db.VarChar(255)
  created_at        DateTime @default(now()) @db.Timestamp(6)
  updated_at        DateTime @default(now()) @db.Timestamp(6)
  user              user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model provider {
  id             String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description    String?        @db.VarChar(255)
  status         String?        @db.VarChar(255)
  contact_number String?        @db.VarChar(20)
  address        String?        @db.VarChar(255)
  name           String         @db.VarChar(255)
  created_at     DateTime       @default(now()) @db.Timestamp(6)
  updated_at     DateTime       @default(now()) @db.Timestamp(6)
  user_id        String         @db.Uuid
  tenant_id      String         @db.VarChar(255)
  bill_payment   bill_payment[]
  user           user           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  recharge       recharge[]
}

model recharge {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id         String   @db.Uuid
  provider_id     String   @db.Uuid
  amount          Int
  recharge_date   DateTime @default(now()) @db.Timestamp(6)
  recharge_status String   @db.VarChar(255)
  recharge_type   String   @db.VarChar(255)
  transaction_id  String   @db.VarChar(255)
  created_at      DateTime @default(now()) @db.Timestamp(6)
  updated_at      DateTime @default(now()) @db.Timestamp(6)
  provider        provider @relation(fields: [provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user            user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email            String             @unique @db.VarChar(255)
  firstName        String?            @db.VarChar(255)
  lastName         String?            @db.VarChar(255)
  roq_user_id      String             @db.VarChar(255)
  tenant_id        String             @db.VarChar(255)
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  bill_payment     bill_payment[]
  cashback         cashback[]
  customer_service customer_service[]
  provider         provider[]
  recharge         recharge[]
}
